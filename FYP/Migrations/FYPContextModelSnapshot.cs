// <auto-generated />
using System;
using FYP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FYP.Migrations
{
    [DbContext(typeof(FYPContext))]
    partial class FYPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FYP.Models.Account", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .HasMaxLength(45);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("FYP.Models.AccountModule", b =>
                {
                    b.Property<int>("ModuleId");

                    b.Property<int>("AccountId");

                    b.Property<bool>("Deleted");

                    b.HasKey("ModuleId", "AccountId");

                    b.HasAlternateKey("AccountId", "ModuleId");

                    b.ToTable("AccountModule");
                });

            modelBuilder.Entity("FYP.Models.Course", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseName")
                        .IsRequired();

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.HasKey("ID");

                    b.ToTable("Course");
                });

            modelBuilder.Entity("FYP.Models.Document", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("DocName")
                        .IsRequired();

                    b.Property<string>("FileURL")
                        .HasMaxLength(200);

                    b.Property<int>("ModuleId");

                    b.Property<string>("Status")
                        .HasMaxLength(50);

                    b.Property<int>("UploadById");

                    b.HasKey("ID");

                    b.HasIndex("ModuleId");

                    b.HasIndex("UploadById");

                    b.ToTable("Document");
                });

            modelBuilder.Entity("FYP.Models.LogHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AccessTime");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .HasMaxLength(45);

                    b.Property<int>("Userid");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.ToTable("LogHistory");
                });

            modelBuilder.Entity("FYP.Models.Module", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseID");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("ModuleName")
                        .IsRequired();

                    b.HasKey("ID");

                    b.HasIndex("CourseID");

                    b.ToTable("Module");
                });

            modelBuilder.Entity("FYP.Models.TracingHistory", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AccessTime");

                    b.Property<bool>("Deleted");

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<int>("DocId");

                    b.Property<string>("DocName");

                    b.Property<int?>("DocumentID");

                    b.Property<string>("FileURL")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .HasMaxLength(45);

                    b.Property<int>("UserId");

                    b.Property<string>("Username")
                        .HasMaxLength(100);

                    b.HasKey("ID");

                    b.HasIndex("DocumentID");

                    b.ToTable("TracingHistory");
                });

            modelBuilder.Entity("FYP.Models.AccountModule", b =>
                {
                    b.HasOne("FYP.Models.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FYP.Models.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FYP.Models.Document", b =>
                {
                    b.HasOne("FYP.Models.Module", "Module")
                        .WithMany()
                        .HasForeignKey("ModuleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FYP.Models.Account", "AccountUpload")
                        .WithMany()
                        .HasForeignKey("UploadById")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FYP.Models.Module", b =>
                {
                    b.HasOne("FYP.Models.Course", "Course")
                        .WithMany()
                        .HasForeignKey("CourseID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FYP.Models.TracingHistory", b =>
                {
                    b.HasOne("FYP.Models.Document")
                        .WithMany("ListTracingHistory")
                        .HasForeignKey("DocumentID");
                });
#pragma warning restore 612, 618
        }
    }
}
